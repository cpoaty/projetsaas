# Generated by Django 5.2 on 2025-04-29 11:44

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0004_alter_accountclass_date_creation'),
    ]

    operations = [
        migrations.AddField(
            model_name='accountgroup',
            name='actif',
            field=models.BooleanField(default=True, help_text='Indique si ce groupe est actif dans le plan comptable.', verbose_name='Actif'),
        ),
        migrations.AddField(
            model_name='accountgroup',
            name='date_creation',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Date de création'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='accountgroup',
            name='account_class',
            field=models.ForeignKey(help_text='Classe de compte à laquelle appartient ce groupe.', on_delete=django.db.models.deletion.CASCADE, to='accounts.accountclass', verbose_name='Classe de compte'),
        ),
        migrations.AlterField(
            model_name='accountgroup',
            name='description',
            field=models.TextField(blank=True, editable=False, help_text='Description détaillée du groupe de comptes (générée automatiquement).', verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='accountgroup',
            name='name',
            field=models.CharField(editable=False, help_text='Nom du groupe de comptes (généré automatiquement).', max_length=100, verbose_name='Nom'),
        ),
        migrations.AlterField(
            model_name='accountgroup',
            name='number',
            field=models.PositiveSmallIntegerField(help_text='Numéro du groupe de comptes (ex: 10, 11, etc.)', unique=True, validators=[django.core.validators.MinValueValidator(10, message='Le numéro de groupe doit être au minimum 10.'), django.core.validators.MaxValueValidator(89, message='Le numéro de groupe doit être au maximum 89.')], verbose_name='Numéro'),
        ),
    ]
